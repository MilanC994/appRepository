{"version":3,"sources":["redux/coins/coinReducer.js","redux/coins/coinExport.js","redux/store.js","components/CustomBadge.js","components/Coin.js","components/Hooks/useInputField.js","components/Hooks/useCoinsContainer.js","redux/coins/coinActions.js","components/Pay.js","components/CoinsContainer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","coins","value","count","toPay","outputString","setterButtonsDisabled","payButtonDisabled","incrCoin","state","action","map","c","payload","decrCoin","addCoin","newCoin","find","coin","sort","a","b","randomIntFromInterval","min","max","Math","floor","random","calculateChange","payedAmount","amount","Number","toFixed","minCount","result","recurse","index","coinCount","length","bestChange","change","push","solution","cointToUpdate","JSON","stringify","replace","updateCoins","removeCoin","coinValue","filter","coinReducer","type","store","createStore","CustomBadge","children","className","Coin","increment","decrement","disable","remove","disabled","onClick","useInputField","defaultValue","useState","setValue","useCoinsContainer","setCount","useMemo","useSelector","setterButtonsStatus","payButtonStatus","dispatch","useDispatch","coinIncrement","useCallback","incrementCoin","coinDecrement","decrementCoin","calculate","calculateDiff","setToPayAmount","addNewCoin","deleteCoin","Pay","props","step","onChange","e","target","placeholder","CoinsContainer","Fragment","style","margin","key","name","App","color","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4edefbb7.chunk.js","sourcesContent":["import {\r\n  INCREMENT_COIN,\r\n  DECREMENT_COIN,\r\n  CALCULATE,\r\n  SET_AMOUNT_TO_PAY,\r\n  ADD_COIN,\r\n  REMOVE_COIN\r\n} from \"./coinExport\"\r\nimport { sort } from 'ramda'\r\n\r\nconst initialState = {\r\n  coins: [\r\n    { value: 5, count: 10 },    \r\n    { value: 2, count: 10 },\r\n    { value: 1, count: 10 },\r\n    { value: 0.5, count: 10 },\r\n    { value: 0.2, count: 10 },\r\n    { value: 0.1, count: 10 },\r\n  ],\r\n  toPay: 0,\r\n  outputString: \"\",\r\n  setterButtonsDisabled: false,\r\n  payButtonDisabled: true\r\n};\r\n\r\nfunction incrCoin(state = initialState, action) {\r\n  return {\r\n    ...state,\r\n    coins: [\r\n      ...state.coins.map(c =>  c.value === action.payload ?  {...c, count: c.count + 1 } : c )\r\n    ]\r\n  }\r\n}\r\nfunction decrCoin(state, action) {\r\n  return {\r\n    ...state,\r\n    coins: [\r\n      ...state.coins.map(c =>  c.value === action.payload && c.count > 0 ? {...c, count: c.count - 1 } : c )\r\n    ]\r\n  }\r\n}\r\nconst addCoin = (state, newCoin) => {\r\n  if(! newCoin.value)\r\n    return{\r\n      ...state,\r\n      outputString: \"Value must be higher than 0\"\r\n    }\r\n  const alreadyExists = state.coins.find(coin => coin.value === newCoin.value)\r\n  if(alreadyExists){\r\n    return {\r\n      ...state,\r\n      coins:[\r\n        ...state.coins.map(coin => coin.value !== newCoin.value ?  coin : { ...coin, count: coin.count + newCoin.count})\r\n      ]\r\n    }\r\n  }\r\n  \r\n  const byValue = function(a, b) { return b.value - a.value }\r\n  return {\r\n    ...state,\r\n    coins: sort(byValue,[...state.coins, newCoin])\r\n  }\r\n  return state\r\n}\r\nconst updateCoins = (state, solution, amount) => {\r\nconst regex = /(\\[)|(\\])|({)|(\")|({)|(})/g\r\n  return {\r\n    ...state,\r\n    coins:[\r\n      ...state.coins.map(coin => {\r\n        const cointToUpdate = solution.find(c => c.value === coin.value)\r\n        return cointToUpdate ? { ...coin, count: coin.count - cointToUpdate.count } : coin\r\n      })\r\n    ],\r\n    outputString: JSON.stringify(solution).replace(regex, ' ') + ' = ' + amount,\r\n    payButtonDisabled: true,\r\n    setterButtonsDisabled: false\r\n  }\r\n\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nconst calculateChange = (state, payedAmount) => {\r\n  const { coins, toPay } = state\r\n  const amount = Number(payedAmount - toPay).toFixed(1);\r\n  let minCount = null\r\n  const recurse = (amount, index, coinCount) => {\r\n\r\n    if(minCount && coinCount >= minCount)\r\n      return null\r\n    \r\n    if(amount == 0){\r\n      if(minCount == null || coinCount < minCount){\r\n        minCount = coinCount\r\n        return [] //success\r\n      }\r\n      return null //nonOptimal\r\n    }\r\n    if(index >= coins.length)\r\n      return null // failure\r\n    let bestChange = null\r\n    const coin = coins[index]\r\n    \r\n    const canUse = Math.min(Math.floor((amount/coin.value).toFixed(1)), coin.count)\r\n    for(let count = canUse; count>=0; count --){\r\n      let change = recurse((amount - coin.value * count).toFixed(1), index + 1, coinCount + count)\r\n      if(change != null){\r\n        if(count){\r\n          change && change.push({ value: coin.value, count })\r\n        }\r\n        bestChange = change\r\n\r\n      }\r\n      if(index === coins.length -1)\r\n        break\r\n    }\r\n    return bestChange\r\n  }\r\n  if(amount >= 0){\r\n    const result = recurse(amount, 0, 0)\r\n    return  result ? updateCoins(state, result, amount) : { ...state, outputString:\"Not Possible\"}\r\n  }\r\n  return{ ...state, outputString:\"You need to pay more money\"}\r\n\r\n\r\n}\r\n\r\nconst removeCoin = (state, coinValue) =>{\r\n  return{\r\n    ...state,\r\n    coins: [\r\n      ...state.coins.filter(coin => coin.value !==coinValue)\r\n    ]\r\n  }\r\n}\r\nconst coinReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INCREMENT_COIN: \r\n      return incrCoin(state, action);\r\n    \r\n    case DECREMENT_COIN:\r\n      return decrCoin(state, action);\r\n    \r\n    case CALCULATE: \r\n      return calculateChange(state, action.payload)\r\n\r\n    case SET_AMOUNT_TO_PAY: \r\n      return {\r\n        ...state,\r\n        toPay: Number(randomIntFromInterval(100, 300) * 0.1).toFixed(1),\r\n        setterButtonsDisabled: true,\r\n        payButtonDisabled: false\r\n    }\r\n\r\n    case ADD_COIN: \r\n      return addCoin(state, action.payload)\r\n    \r\n    case REMOVE_COIN:\r\n      return removeCoin(state, action.payload)\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default coinReducer","export const INCREMENT_COIN = 'INCREMENT_COIN'\r\nexport const DECREMENT_COIN = 'DECREMENT_COIN'\r\nexport const CALCULATE = 'CALCULATE'\r\nexport const SET_AMOUNT_TO_PAY = 'SET_AMOUNT_TO_PAY'\r\nexport const ADD_COIN = 'ADD_COIN'\r\nexport const REMOVE_COIN = 'REMOVE_COIN'","import { createStore } from \"redux\";\r\nimport coinReducer from \"./coins/coinReducer\";\r\n\r\nconst store = createStore(coinReducer);\r\n\r\nexport default store;\r\n","import React from 'react'\r\n\r\nexport default function CustomBadge({ children }) {\r\n    return (\r\n        <span className=\" myBadge badge m-2 px-4 badge-secondary\">{children}</span>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport CustomBadge from \"./CustomBadge\"\r\n\r\n\r\nconst  Coin= ({value, count, increment, decrement, disable, remove}) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <CustomBadge>\r\n          <h5>Value:{value}</h5>\r\n        </CustomBadge>\r\n      </td>\r\n      <td>\r\n        <CustomBadge>\r\n          <h5>Count:{count}</h5>\r\n        </CustomBadge>\r\n      </td>\r\n      <td>\r\n        <button\r\n          disabled={disable}\r\n          onClick={() => increment(value)}\r\n          className=\"customBtn btn btn-secondary m-2\"\r\n        >\r\n          <h3>+</h3>\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button\r\n          disabled={disable}\r\n          onClick={() => decrement(value)}\r\n          className=\"customBtn btn btn-danger  m-2\"\r\n        >\r\n          <h3>-</h3>\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button\r\n          disabled={disable}\r\n          onClick={() => remove(value)}\r\n          className=\"btn btn-danger  m-2\"\r\n        >\r\n          <h5>Remove</h5>\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import React, { useState } from 'react'\r\n//TODO- add required option\r\nconst useInputField = defaultValue => {\r\n    const [value, setValue] = useState(defaultValue)\r\n    return { value, setValue }\r\n}\r\n\r\nexport default useInputField\r\n","import React, { useCallback, useState, useMemo } from 'react'\r\nimport useInputField from './useInputField'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    incrementCoin,\r\n    decrementCoin,\r\n    calculateDiff,\r\n    setToPay,\r\n    addCoin,\r\n    removeCoin\r\n  } from \"../../redux/coins/coinActions\"\r\n  \r\n  \r\n   const useCoinsContainer = () => {\r\n    const { value: count, setValue: setCount } = useInputField(0)\r\n    const { value, setValue } = useInputField(0)\r\n\r\n    const coin = useMemo(() => {\r\n         return { count, value } \r\n        }, [count, value])\r\n\r\n    const getCoins = state => state.coins\r\n    const coins = useSelector(getCoins)\r\n\r\n    const getSetterButtonsStatus = state => state.setterButtonsDisabled\r\n    const setterButtonsStatus = useSelector(getSetterButtonsStatus)\r\n    \r\n    const getToPay = state => state.toPay\r\n    const toPay = useSelector(getToPay)\r\n    \r\n    const getOutputString = state => state.outputString\r\n    const outputString = useSelector(getOutputString)\r\n    \r\n    const getPayButtonStatus = state => state.payButtonDisabled\r\n    const payButtonStatus = useSelector(getPayButtonStatus)\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const coinIncrement = useCallback( value => {\r\n         dispatch(incrementCoin(value))\r\n      },[])\r\n\r\n    const coinDecrement = useCallback( value => {\r\n         dispatch(decrementCoin(value))\r\n      },[])\r\n\r\n    const calculate = useCallback( (payedAmount) => {\r\n         dispatch(calculateDiff(payedAmount))\r\n      },[])\r\n\r\n    const setToPayAmount = useCallback( () => {\r\n         dispatch(setToPay())\r\n      },[])\r\n\r\n    const addNewCoin = useCallback( () => {\r\n        dispatch(addCoin(coin))\r\n     },[coin])\r\n\r\n    const deleteCoin = useCallback( coinValue => {\r\n        dispatch(removeCoin(coinValue))\r\n     },[/* value ?*/])\r\n\r\n     return {\r\n        count,\r\n        setCount,\r\n        value,\r\n        setValue,\r\n        coins,\r\n        setterButtonsStatus,\r\n        toPay,\r\n        outputString,\r\n        payButtonStatus,\r\n        coinIncrement,\r\n        coinDecrement,\r\n        calculate,\r\n        setToPayAmount,\r\n        addNewCoin,\r\n        deleteCoin\r\n    }\r\n  }\r\n  export default useCoinsContainer\r\n  ","import {\r\n  INCREMENT_COIN,\r\n  DECREMENT_COIN,\r\n  CALCULATE,\r\n  SET_AMOUNT_TO_PAY,\r\n  ADD_COIN,\r\n  REMOVE_COIN\r\n} from \"./coinExport\";\r\n\r\nexport const incrementCoin = value => {\r\n  return {\r\n    type: INCREMENT_COIN,\r\n    payload: value\r\n  }\r\n}\r\n\r\nexport const decrementCoin = value => {\r\n  return {\r\n    type: DECREMENT_COIN,\r\n    payload: value\r\n  }\r\n}\r\n\r\nexport const calculateDiff = payedAmount => {\r\n  return {\r\n    type: CALCULATE,\r\n    payload: payedAmount,\r\n  }\r\n}\r\nexport const setToPay = () => {\r\n  return {\r\n    type: SET_AMOUNT_TO_PAY\r\n  }\r\n}\r\nexport const addCoin = coin => {\r\n  return{\r\n    type: ADD_COIN,\r\n    payload: coin\r\n  }\r\n}\r\nexport const removeCoin = coinValue => {\r\n  return{\r\n    type: REMOVE_COIN,\r\n    payload: coinValue\r\n  }\r\n}\r\n","import React,{ useState } from 'react'\r\nimport useInputField from './Hooks/useInputField'\r\n\r\nconst Pay = (props) => {\r\n    const { value, setValue} = useInputField('')\r\n    return (       \r\n      <div> \r\n        <span className =\"badge m-2 badge-secondary\"><h5>Required to Pay: {props.toPay}</h5></span><br/>\r\n        <input className=\"input-lg  m-2\" type=\"number\" step={0.1} value={value} onChange={(e) => setValue(e.target.value)}  disabled={props.disable}  placeholder='Enter amount'/>\r\n        <button className=\"btn-primary\" disabled={props.disable} onClick={()=>props.calculate(value)}>\r\n            <h4>Pay</h4></button>\r\n      </div>\r\n    )\r\n }\r\nexport default Pay","import React from \"react\"\r\nimport Coin from \"./Coin\"\r\nimport CustomBadge from \"./CustomBadge\"\r\nimport useCoinsContainer from './Hooks/useCoinsContainer'\r\nimport Pay from \"./Pay\"\r\n\r\nconst CoinsContainer = () => {\r\n  const {\r\n    count,\r\n    setCount,\r\n    value,\r\n    setValue,\r\n    coins,\r\n    setterButtonsStatus,\r\n    toPay,\r\n    outputString,\r\n    payButtonStatus,\r\n    coinIncrement,\r\n    coinDecrement,\r\n    calculate,\r\n    setToPayAmount,\r\n    addNewCoin,\r\n    deleteCoin\r\n  } = useCoinsContainer()\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <table style={{ margin: \"auto\" }}>\r\n          <tbody>\r\n            {coins.map((coin) => (\r\n              <Coin\r\n                key={coin.value}\r\n                disable={setterButtonsStatus}\r\n                value={coin.value}\r\n                decrement={coinDecrement}\r\n                increment={coinIncrement}\r\n                remove={deleteCoin}\r\n                count={coin.count}\r\n              />\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n        <h2 className=\"text-primary\">Add Coin</h2>\r\n        <table style={{ margin: \"auto\" }}>\r\n          <tbody>\r\n            <tr>\r\n              <td><CustomBadge ><h5>Value:</h5></CustomBadge></td>\r\n              <td>\r\n                <input \r\n                  type=\"number\" \r\n                  value={value} \r\n                  className=\"form-control\" \r\n                  name=\"value\" step={0.1} \r\n                  onChange = {(e) => setValue(+e.target.value)} \r\n                />\r\n              </td>\r\n              <td><CustomBadge ><h5>Count:</h5></CustomBadge></td>\r\n              <td>\r\n                <input \r\n                  type=\"number\" \r\n                  value={count} \r\n                  className=\"form-control\" \r\n                  name=\"count\" onChange = {(e) => setCount(+e.target.value)} \r\n                />\r\n              </td>\r\n              <td>\r\n              <button\r\n                className=\"btn-primary btn-success ml-2\"  \r\n                onClick={() => addNewCoin()}\r\n              >\r\n                <h5> Add Coin </h5>\r\n              </button>\r\n              </td>\r\n              \r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button\r\n          className=\"btn-primary btn-success\"\r\n          disabled={setterButtonsStatus}\r\n          onClick={() => setToPayAmount()}\r\n        >\r\n          <h3> Generate Amount:</h3>\r\n        </button>  \r\n        <Pay\r\n          toPay={toPay}\r\n          disable={payButtonStatus}\r\n          calculate={calculate}\r\n        />\r\n        {outputString &&\r\n          <span className=\"badge m-2 badge-secondary\">\r\n            <h5>{outputString}</h5>\r\n          </span>\r\n        }\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n}\r\n\r\nexport default CoinsContainer","import React from \"react\";\r\nimport store from \"./redux/store\";\r\nimport \"./App.css\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport CoinsContainer from \"./components/CoinsContainer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <h1 style={{ color: \"orange\" }}>Change Application</h1>\r\n        <CoinsContainer />\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
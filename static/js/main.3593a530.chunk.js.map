{"version":3,"sources":["redux/coins/coinReducer.js","redux/coins/coinExport.js","redux/store.js","components/CoinContainer.js","pay.js","components/Coins.js","redux/coins/coinActions.js","App.js","serviceWorker.js","index.js"],"names":["initialState","coin","id","value","count","toPay","payed","difference","outputString","buttonDIsabled","disablePay","numOfCoinsUsed","doIt","state","stateIfOutOfCoins","sumOfAllCoins","i","length","checkIfThereAreEnoughCoins","limit","pomLimit","pomState","k","Math","floor","produce","draft","Number","toFixed","incrCoin","action","payload","decrCoin","setPayedAmount","randomIntFromInterval","min","max","random","coinReducer","type","console","log","store","createStore","CoinContainer","props","className","disabled","disable","onClick","incrementProp","decrementProp","Pay","this","onChange","handleEmailChange","ref","setPayed","refs","inputText","calculate","Component","Coins","Fragment","style","margin","coinProp","map","key","btnDisabled","setToPay","getToPay","dsblPay","getOutputString","connect","dispatch","number","incrementCoin","App","color","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3593a530.chunk.js","sourcesContent":["import {INCREMENT_COIN, DECREMENT_COIN,CALCULATE,SETTOPAY,SETPAYED} from './coinExport'\r\nimport produce from 'immer'\r\n\r\n\r\n\r\nconst initialState = {\r\n    coin:[{id:0,value:5.0, count : 10},\r\n        {id:1,value:2.0, count : 10},\r\n        {id:2,value:1.0, count : 10},\r\n        {id:3,value:0.50, count : 10},\r\n        {id:4,value:0.20, count : 10},\r\n        {id:5,value:0.10, count : 10}\r\n    ],\r\n    toPay:0,\r\n    payed:0,\r\n    difference:0,\r\n    outputString:'',\r\n    buttonDIsabled:false,\r\n    disablePay:true,\r\n    numOfCoinsUsed:0\r\n}\r\n\r\nfunction checkIfThereAreEnoughCoins(state)\r\n{\r\n    let sumOfAllCoins=0\r\n    for(let i=0;i<state.coin.length;i++)\r\n    {\r\n        sumOfAllCoins+=(state.coin[i].count*state.coin[i].value)\r\n    }\r\n\r\n    if(sumOfAllCoins>state.difference)\r\n    {return true}\r\n    return false\r\n}\r\n\r\n\r\nfunction doIt(state, stateIfOutOfCoins) \r\n{\r\n    if(checkIfThereAreEnoughCoins(state)==false)\r\n    {\r\n        state={...state,\r\n        outputString:\"No Enough Coins to Return Change: \"+state.difference,\r\n        buttonDIsabled:true,\r\n        disablePay:false\r\n    }\r\n            return state;\r\n    }\r\n    \r\n    else if(state.difference==0)\r\n    {\r\n        return state\r\n    }\r\n    \r\n    let pomState = {...state,\r\n    numOfCoinsUsed:9999\r\n    }\r\n    let multiplyFactor = 1;\r\n    let limit,pomLimit\r\n    for(let k=0;k<state.coin.length-1;k++)\r\n    {\r\n        limit=Math.floor((state.difference/state.coin[k].value)+0.001)\r\n        pomLimit=limit\r\n\r\n        while(state.coin[k].count!=0 && limit>0)\r\n    {\r\n        \r\n    for(let i = 0; i<state.coin.length;i++)\r\n    {\r\n       \r\n        if(i==k)\r\n        {i++}\r\n            while(state.coin[k].count!=0 && pomLimit>0 && state.difference>=state.coin[k].value)\r\n            {\r\n                    \r\n                    state =  produce(state, draft=>{\r\n                    draft.coin[k].count-=1\r\n                    draft.difference-=state.coin[k].value\r\n                    draft.difference= Number(draft.difference).toFixed(1)\r\n                    draft.numOfCoinsUsed+=1\r\n                  \r\n                    pomLimit--\r\n                  \r\n                })\r\n                if(state.numOfCoinsUsed>pomState.numOfCoinsUsed)\r\n                    break;\r\n            }\r\n         \r\n        while(state.coin[i].count!=0 && state.difference>=state.coin[i].value)\r\n        {\r\n            \r\n                state =  produce(state, draft=>{\r\n                draft.coin[i].count-=1\r\n                draft.difference-=state.coin[i].value\r\n                draft.difference= Number(draft.difference).toFixed(1)\r\n                draft.numOfCoinsUsed+=1\r\n                \r\n            })\r\n            if(state.numOfCoinsUsed>pomState.numOfCoinsUsed)\r\n                    break;\r\n        }\r\n \r\n    \r\n    }\r\n    if(state.difference==0 && state.numOfCoinsUsed<pomState.numOfCoinsUsed)\r\n        {\r\n   \r\n            pomState={...state,\r\n            outputString:\"Accelpted !\"}\r\n           \r\n        }\r\n        \r\n        state={...stateIfOutOfCoins}\r\n   \r\n    \r\n   limit--\r\n   pomLimit=limit;\r\n   \r\n}\r\n\r\n}\r\n    \r\n    if(pomState.difference!=0)\r\n    {\r\n        pomState={...stateIfOutOfCoins,\r\n        outputString:\"No Enough coins to return change\",\r\n        buttonDIsabled:true,\r\n        disablePay:false\r\n        }\r\n    }\r\n    return pomState;\r\n}\r\n\r\n\r\n\r\nfunction incrCoin(state = initialState,action)\r\n{\r\n    \r\n  return   produce(state, draft=>{\r\n    draft.coin[action.payload].count+=1\r\n\r\n  \r\n})  \r\n}\r\nfunction decrCoin(state , action)\r\n{\r\n    if(state.coin[action.payload].count>0)\r\n    {\r\n  return   produce(state, draft=>{\r\n         draft.coin[action.payload].count-=1\r\n       \r\n    })\r\n  }\r\n        \r\n    \r\n    else {return state}\r\n}\r\nfunction setPayedAmount(state,action)\r\n{\r\n    if(action.payload-state.toPay>=0)\r\n    { \r\n   \r\n       return produce(state, draft=>{\r\n        draft.payed = action.payload\r\n        draft.difference=Number(action.payload-draft.toPay).toFixed(1)\r\n        draft.disablePay=true;\r\n        draft.buttonDIsabled=false;\r\n        draft.outputString=''\r\n        })\r\n        \r\n    }\r\n    else\r\n    {\r\n   \r\n        return produce(state,draft=>{\r\n            draft.outputString='You need to pay more money, input correct amount !'\r\n            draft.difference=0;\r\n        })\r\n    }\r\n\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) { \r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n\r\n\r\nconst coinReducer = (state = initialState,action)=>\r\n{\r\n    //from : https://daveceddia.com/react-redux-immutability-guide/#redux-add-an-item-to-an-array\r\n    switch(action.type)\r\n    {\r\n        \r\n        case INCREMENT_COIN:\r\n            {\r\n\r\n                return incrCoin(state,action)\r\n                \r\n                \r\n            }\r\n         case DECREMENT_COIN:\r\n            {\r\n                        \r\n                return  decrCoin(state,action)\r\n                \r\n            }\r\n                    \r\n        case CALCULATE:\r\n            {\r\n                    console.log(state.difference+\"  RAZLIKA\")\r\n                    return     doIt(state,state)\r\n                    \r\n            }\r\n        case SETPAYED:\r\n            {\r\n                return setPayedAmount(state,action)\r\n                \r\n            }\r\n                    \r\n        case SETTOPAY:\r\n            {\r\n                return produce(state, draft=>{\r\n                    draft.toPay =Number(randomIntFromInterval(100,300)*0.1).toFixed(1)\r\n                    draft.buttonDIsabled=true;\r\n                    draft.disablePay=false;\r\n\r\n\r\n                })\r\n                    \r\n            }\r\n        \r\n        \r\n        default: return state\r\n      \r\n    }\r\n}\r\n\r\nexport default coinReducer","export const INCREMENT_COIN= 'INCREMENT_COIN'\r\nexport const DECREMENT_COIN = 'DECREMENT_COIN'\r\nexport const CALCULATE = 'CALCULATE'\r\nexport const SETTOPAY='SETTOPAY'\r\nexport const SETPAYED='SETPAYED'","import {createStore} from \"redux\";\r\nimport coinReducer from \"./coins/coinReducer\";\r\n\r\n\r\nconst store = createStore(coinReducer);\r\n\r\nexport default store;","import React from 'react'\r\nimport '../App.css';\r\n\r\nfunction CoinContainer(props) {\r\n    \r\n    \r\n    return (\r\n        <tr>         \r\n        <td> <span className =\"myBadge badge m-2 badge-secondary\"><h5>Value:{props.value}</h5></span></td>\r\n        <td><span className =\"myBadge badge m-2 badge-secondary\"><h5>Count:{props.count}</h5></span></td>\r\n        <td><button disabled={props.disable} onClick={()=>props.incrementProp(props.id)}   className=\"myBtn btn btn-secondary m-2\"><h3>+</h3></button></td>\r\n        <td><button disabled={props.disable}  onClick={()=>props.decrementProp(props.id)} className=\"myBtn btn btn-danger  m-2\"><h3>-</h3></button></td>\r\n         </tr>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default  (CoinContainer)\r\n","import React,{Component} from 'react'\r\n\r\n\r\n\r\n\r\n\r\nclass Pay extends Component  {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render(){\r\n        return (\r\n       \r\n      <div> \r\n           <span className =\"badge m-2 badge-secondary\"><h5>Required to Pay: {this.props.toPay}</h5></span><br/>\r\n           <input className=\"input-lg\" onChange={this.handleEmailChange}  disabled={this.props.disable} ref='inputText' className='m-2' type='text' placeholder='Enter amount'/>\r\n           <button className=\"btn-primary\" disabled={this.props.disable} onClick={()=>{\r\n               this.props.setPayed(this.refs.inputText.value);\r\n               this.props.calculate();\r\n           }}><h4>Pay</h4></button>\r\n      </div>\r\n      \r\n    );\r\n        }\r\n }\r\n\r\n\r\n\r\n\r\nexport default Pay","import CoinContainer from './CoinContainer';\r\nimport React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { incrementCoin, decrementCoin,calculateDiff,setPayed,setToPay } from '../redux/coins/coinActions'\r\nimport  Pay from '../pay'\r\n\r\n\r\n\r\nclass Coins extends Component {\r\n\r\n \r\n  render() {\r\n      \r\n    \r\n    return (\r\n       <React.Fragment>\r\n        <div > \r\n        <table style={{margin:\"auto\"}}>\r\n            <tbody>\r\n            {this.props.coinProp.map( coin=><CoinContainer key={coin.id} disable = {this.props.btnDisabled}   id={coin.id} value = {coin.value} decrementProp ={this.props.decrementProp} incrementProp = {this.props.incrementProp} count = {coin.count}/>)}\r\n            </tbody>\r\n       </table>\r\n       <button className='btn-primary btn-success' disabled={this.props.btnDisabled} onClick={()=>this.props.setToPay()}><h2> Apply:</h2></button>\r\n      \r\n       <Pay toPay={this.props.getToPay} disable={this.props.dsblPay} calculate ={this.props.calculate} setPayed={this.props.setPayed} calculate ={this.props.calculate}/>\r\n       <span className =\"badge m-2 badge-secondary\"><h5>{this.props.getOutputString}</h5></span>\r\n\r\n      </div>\r\n      \r\n\r\n      </React.Fragment>      \r\n      \r\n    );\r\n\r\n}\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state =>\r\n{\r\n    return{\r\n        coinProp:state.coin,\r\n        btnDisabled:state.buttonDIsabled,\r\n        getToPay:state.toPay,\r\n        getOutputString:state.outputString,\r\n        dsblPay:state.disablePay\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return{\r\n        \r\n        incrementProp:number=>dispatch(incrementCoin(number)),\r\n        decrementProp:number=>dispatch(decrementCoin(number)),\r\n        calculate:()=>dispatch(calculateDiff()),\r\n        setPayed:number=>dispatch(setPayed(number)),\r\n        setToPay:()=>dispatch(setToPay())\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)( Coins)","import {INCREMENT_COIN, DECREMENT_COIN,CALCULATE,SETTOPAY,SETPAYED} from './coinExport'\r\n\r\nexport const incrementCoin = (value=1) =>//default =1\r\n{\r\n    return{\r\n        type: INCREMENT_COIN,\r\n        payload:value\r\n    }\r\n}\r\n\r\nexport const  decrementCoin =value =>\r\n{\r\n  return{\r\n      type: DECREMENT_COIN,\r\n      payload:value\r\n  }\r\n}\r\n\r\nexport const calculateDiff =()=>\r\n{\r\n    return{\r\n        type:CALCULATE,\r\n        payload:5\r\n    }\r\n}\r\nexport const setPayed = value=>\r\n{\r\n    return{\r\n        type:SETPAYED,\r\n        payload:value\r\n    }\r\n}\r\nexport const setToPay =()=>\r\n{\r\n    return{\r\n        type:SETTOPAY,\r\n        payload:5\r\n    }\r\n}","import React from 'react';\nimport store from './redux/store';\nimport './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport Coins from './components/Coins';\n\n\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n    <div  className=\"App\">\n      <h1 style={{color:'orange'}}>Change Application</h1>\n      <Coins/>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["redux/coins/coinReducer.js","redux/coins/coinExport.js","redux/store.js","components/Coin.js","components/Hooks/useInputField.js","utils/validation.js","components/Hooks/useAddCoinDialog.js","redux/coins/coinActions.js","components/AddCoinDialog.js","components/Hooks/useCoinsContainer.js","components/Hooks/usePay.js","components/Pay.js","components/constants.js","components/CoinsContainer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","coins","value","count","toPay","outputString","setterButtonsDisabled","payButtonDisabled","incrCoin","state","action","map","c","payload","decrCoin","addCoin","newCoin","find","coin","sort","a","b","randomIntFromInterval","min","max","Math","floor","random","calculateChange","payedAmount","amount","Number","toFixed","minCount","result","recurse","index","coinCount","length","bestChange","change","push","solution","cointToUpdate","JSON","stringify","replace","updateCoins","removeCoin","coinValue","filter","coinReducer","type","store","createStore","Coin","increment","decrement","disable","remove","addRemoveButtonsStyle","background","fontSize","Card","id","className","style","position","OverlayTrigger","placement","delay","show","hide","overlay","props","Tooltip","onClick","width","height","color","right","top","Body","margin","display","Button","variant","disabled","useInputField","defaultValue","validateFn","useState","setInputValue","error","setError","setInputError","useCallback","_","debounce","setValue","validate","checkValue","isEmpty","test","validValue","isNil","validCount","isNullOrEmpty","useAddCoinDialog","handleCloseDialog","setCount","countInputError","setCoinInputError","valueInputError","setValueInputError","disableSubmitButton","useMemo","dispatch","useDispatch","handleAddCoinDialogClose","addNewCoin","AddCoinDialog","isDialogOpen","handleDialogClose","errorStyle","Modal","dialogClassName","onHide","Header","closeButton","Title","Form","Group","Label","Control","step","onChange","e","target","placeholder","Footer","useCoinsContainer","setIsDialogOpen","toggleAddCoinDialog","useSelector","setterButtonsStatus","payButtonStatus","coinIncrement","incrementCoin","coinDecrement","decrementCoin","calculate","calculateDiff","setToPayAmount","deleteCoin","usePay","requiredToPay","validatePayedAmount","payed","validPayment","setPayed","payedError","setPayedError","onPayClick","Pay","marginBottom","transparentButton","marginTop","marginRight","CoinsContainer","Fragment","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd33c7a4.chunk.js","sourcesContent":["import {\r\n  INCREMENT_COIN,\r\n  DECREMENT_COIN,\r\n  CALCULATE,\r\n  SET_AMOUNT_TO_PAY,\r\n  ADD_COIN,\r\n  REMOVE_COIN\r\n} from \"./coinExport\"\r\nimport { sort } from 'ramda'\r\n\r\nconst initialState = {\r\n  coins: [\r\n    { value: 5, count: 10 },    \r\n    { value: 2, count: 10 },\r\n    { value: 1, count: 10 },\r\n    { value: 0.5, count: 10 },\r\n    { value: 0.2, count: 10 },\r\n    { value: 0.1, count: 10 },\r\n  ],\r\n  toPay: 0,\r\n  outputString: \"\",\r\n  setterButtonsDisabled: false,\r\n  payButtonDisabled: true\r\n};\r\n\r\nfunction incrCoin(state = initialState, action) {\r\n  return {\r\n    ...state,\r\n    coins: [\r\n      ...state.coins.map(c =>  c.value === action.payload ?  {...c, count: c.count + 1 } : c )\r\n    ]\r\n  }\r\n}\r\nfunction decrCoin(state, action) {\r\n  return {\r\n    ...state,\r\n    coins: [\r\n      ...state.coins.map(c =>  c.value === action.payload && c.count > 0 ? {...c, count: c.count - 1 } : c )\r\n    ]\r\n  }\r\n}\r\nconst addCoin = (state, newCoin) => {\r\n  const alreadyExists = state.coins.find(coin => coin.value === newCoin.value)\r\n  if(alreadyExists){\r\n    return {\r\n      ...state,\r\n      coins:[\r\n        ...state.coins.map(coin => coin.value !== +newCoin.value ?  coin : { ...coin, count: coin.count + newCoin.count})\r\n      ]\r\n    }\r\n  }\r\n  \r\n  const byValue = function(a, b) { return b.value - a.value }\r\n  return {\r\n    ...state,\r\n    coins: sort(byValue,[...state.coins, newCoin])\r\n  }\r\n}\r\nconst updateCoins = (state, solution, amount) => {\r\nconst regex = /(\\[)|(\\])|({)|(\")|({)|(})/g\r\n  return {\r\n    ...state,\r\n    coins:[\r\n      ...state.coins.map(coin => {\r\n        const cointToUpdate = solution.find(c => c.value === coin.value)\r\n        return cointToUpdate ? { ...coin, count: coin.count - cointToUpdate.count } : coin\r\n      })\r\n    ],\r\n    outputString: JSON.stringify(solution).replace(regex, ' ') + ' = ' + amount,\r\n    payButtonDisabled: true,\r\n    setterButtonsDisabled: false,\r\n    toPay:0\r\n  }\r\n\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nconst calculateChange = (state, payedAmount) => {\r\n  const { coins, toPay } = state\r\n  const amount = Number(payedAmount - toPay).toFixed(1);\r\n  let minCount = null\r\n  const recurse = (amount, index, coinCount) => {\r\n\r\n    if(minCount && coinCount >= minCount)\r\n      return null\r\n    \r\n    if(amount == 0){\r\n      if(minCount == null || coinCount < minCount){\r\n        minCount = coinCount\r\n        return [] //success\r\n      }\r\n      return null //nonOptimal\r\n    }\r\n    if(index >= coins.length)\r\n      return null // failure\r\n    let bestChange = null\r\n    const coin = coins[index]\r\n    \r\n    const canUse = Math.min(Math.floor((amount/coin.value).toFixed(1)), coin.count)\r\n    for(let count = canUse; count>=0; count --){\r\n      let change = recurse((amount - coin.value * count).toFixed(1), index + 1, coinCount + count)\r\n      if(change != null){\r\n        if(count){\r\n          change && change.push({ value: coin.value, count })\r\n        }\r\n        bestChange = change\r\n\r\n      }\r\n      if(index === coins.length -1)\r\n        break\r\n    }\r\n    return bestChange\r\n  }\r\n  if(amount >= 0){\r\n    const result = recurse(amount, 0, 0)\r\n    return  result ? updateCoins(state, result, amount) : { ...state, outputString:\"Not Possible\"}\r\n  }\r\n  return{ ...state, outputString:\"You need to pay more money\"}\r\n\r\n\r\n}\r\n\r\nconst removeCoin = (state, coinValue) =>{\r\n  return{\r\n    ...state,\r\n    coins: [\r\n      ...state.coins.filter(coin => coin.value !==coinValue)\r\n    ]\r\n  }\r\n}\r\nconst coinReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INCREMENT_COIN: \r\n      return incrCoin(state, action);\r\n    \r\n    case DECREMENT_COIN:\r\n      return decrCoin(state, action);\r\n    \r\n    case CALCULATE: \r\n      return calculateChange(state, action.payload)\r\n\r\n    case SET_AMOUNT_TO_PAY: \r\n      return {\r\n        ...state,\r\n        toPay: Number(randomIntFromInterval(100, 10000) * 0.1).toFixed(1),\r\n        setterButtonsDisabled: true,\r\n        payButtonDisabled: false\r\n    }\r\n\r\n    case ADD_COIN: \r\n      return addCoin(state, action.payload)\r\n    \r\n    case REMOVE_COIN:\r\n      return removeCoin(state, action.payload)\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default coinReducer","export const INCREMENT_COIN = 'INCREMENT_COIN'\r\nexport const DECREMENT_COIN = 'DECREMENT_COIN'\r\nexport const CALCULATE = 'CALCULATE'\r\nexport const SET_AMOUNT_TO_PAY = 'SET_AMOUNT_TO_PAY'\r\nexport const ADD_COIN = 'ADD_COIN'\r\nexport const REMOVE_COIN = 'REMOVE_COIN'","import { createStore } from \"redux\";\r\nimport coinReducer from \"./coins/coinReducer\";\r\n\r\nconst store = createStore(coinReducer);\r\n\r\nexport default store;\r\n","import React from 'react'\r\nimport { Button, Card, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\n\r\n\r\nconst  Coin= ({value, count, increment, decrement, disable, remove}) => {\r\n  const addRemoveButtonsStyle = {\r\n    background: \"transparent\",\r\n    fontSize: \"30px\"\r\n  }\r\n  const renderTooltip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n      Remove Coin\r\n    </Tooltip>\r\n  );\r\n  \r\n\r\n  return (\r\n    <Card id={value}  className=\"coinCard border-secondary\" style={{ background:\"transparent\" }}>\r\n      <div className=\"cardImageDiv\" style={{ position:\"relative\" }}>\r\n        <OverlayTrigger\r\n          placement=\"right\"\r\n          delay={{ show: 250, hide: 400 }}\r\n          overlay={renderTooltip}\r\n        >\r\n          <button\r\n            onClick={() => remove(value) }\r\n            className=\"customBtn\"\r\n            style={{ background:\"transparent\", width:\"25px\", height:\"25px\", color:\"white\", position:\"absolute\", right:\"0px\", top:\"0px\"}}\r\n          >\r\n            X\r\n          </button>\r\n        </OverlayTrigger>\r\n        <p className=\"h1 coinValue\" >{value}</p>\r\n      </div>\r\n      <Card.Body style={{ margin:\"auto\", display:\"flex\" }}>\r\n        <Button\r\n          className=\"customBtn\"\r\n          style={addRemoveButtonsStyle}\r\n          variant=\"primary\"\r\n          disabled={disable}\r\n          onClick={() => increment(value)}\r\n        >\r\n          +\r\n        </Button>\r\n        <div className=\"coinCount\" >\r\n          <h2>{count}</h2>\r\n        </div>\r\n        <Button \r\n          className=\"customBtn\" \r\n          style={addRemoveButtonsStyle} \r\n          variant=\"danger\" \r\n          disabled={disable} \r\n          onClick={() => decrement(value)} \r\n        >\r\n          -\r\n        </Button>\r\n    </Card.Body>\r\n  </Card>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import React, { useState, useCallback } from 'react'\r\nimport _ from 'lodash'\r\n\r\nconst INPUT_DEBOUNCE_TIME = 500\r\nconst useInputField = (defaultValue, validateFn = null) => {\r\n    const [value, setInputValue] = useState(defaultValue)\r\n    const [error, setError] = useState(null)\r\n\r\n\r\n    const setInputError =useCallback( _.debounce( error => {\r\n        setError(error)\r\n      },INPUT_DEBOUNCE_TIME),[])\r\n\r\n    const setValue = (value) => {\r\n        if(validateFn !== null){\r\n            const validate =  validateFn(value)\r\n            validate === true ? setInputError(false) : setInputError(validate)\r\n        }\r\n        setInputValue(value)\r\n    }\r\n    return { value, setValue, error, setError }\r\n}\r\n\r\nexport default useInputField\r\n","import { isNil, isEmpty } from 'ramda'\r\n\r\nconst checkValue = value => {\r\n    const valueRegex = /^\\d+(.[0-9])?$/\r\n    if(!isEmpty(value) && !(valueRegex.test(value)))\r\n        return 'Invalid value acceptable formats are: 154 or 154.1'\r\n    return true \r\n}\r\n\r\n\r\nexport const validValue = value => {\r\n    if(isNil(value))\r\n        return 'Value Must Not Be Null'\r\n    if(+value > 1000)\r\n        return 'Value must not be bigger than 1000'\r\n    return checkValue(value)\r\n}\r\nexport const validCount = count => {\r\n    if(isNil(count)) return 'Count Must Not Be Empty'\r\n    if( count % 1 !== 0)\r\n        return 'Count must be a whole number'\r\n    return true\r\n}\r\n\r\nexport const validPayment = (requiredToPay, payed) => {\r\n    if(+payed < +requiredToPay && !isEmpty(payed))\r\n        return `Must Pay More Money than ${requiredToPay}`\r\n    return checkValue(payed)\r\n\r\n}","import { useMemo, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { isEmpty, isNil } from 'ramda'\r\nimport useInputField from './useInputField'\r\nimport { validValue, validCount } from '../../utils/validation'\r\nimport {\r\n    addCoin\r\n  } from \"../../redux/coins/coinActions\"\r\n\r\n  const isNullOrEmpty = value => {\r\n    return isNil(value) || isEmpty(value) || value === 0 ? true : false\r\n  }\r\n\r\nconst useAddCoinDialog = (handleCloseDialog) =>{\r\n    const { value: count, setValue: setCount, error: countInputError, setError: setCoinInputError } = useInputField('', validCount)\r\n    const { value, setValue, error: valueInputError, setError: setValueInputError } = useInputField('', validValue)\r\n\r\n    const disableSubmitButton = useMemo(() => {\r\n        return  isNullOrEmpty(count) || isNullOrEmpty(value) || countInputError !== false || valueInputError !== false ? true : false\r\n    }, [countInputError, valueInputError, count, value] )\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const coin = useMemo(() => {\r\n         return { count, value } \r\n        }, [count, value])\r\n    \r\n    const handleAddCoinDialogClose = useCallback(() => {\r\n        setValueInputError(null)\r\n        setCoinInputError(null)\r\n        setValue('')\r\n        setCount('')\r\n        handleCloseDialog()\r\n    },[handleCloseDialog, setCoinInputError, setValueInputError, setValue, setCount])\r\n    \r\n    const addNewCoin = useCallback( () => {\r\n        dispatch(addCoin(coin))\r\n        handleAddCoinDialogClose()\r\n        },[coin])\r\n    \r\n    return {\r\n        setCount,\r\n        setValue,\r\n        countInputError,\r\n        valueInputError,\r\n        disableSubmitButton,\r\n        addNewCoin,\r\n        handleAddCoinDialogClose\r\n    }\r\n}\r\nexport default useAddCoinDialog","import {\r\n  INCREMENT_COIN,\r\n  DECREMENT_COIN,\r\n  CALCULATE,\r\n  SET_AMOUNT_TO_PAY,\r\n  ADD_COIN,\r\n  REMOVE_COIN\r\n} from \"./coinExport\";\r\n\r\nexport const incrementCoin = value => {\r\n  return {\r\n    type: INCREMENT_COIN,\r\n    payload: value\r\n  }\r\n}\r\n\r\nexport const decrementCoin = value => {\r\n  return {\r\n    type: DECREMENT_COIN,\r\n    payload: value\r\n  }\r\n}\r\n\r\nexport const calculateDiff = payedAmount => {\r\n  return {\r\n    type: CALCULATE,\r\n    payload: payedAmount,\r\n  }\r\n}\r\nexport const setToPay = () => {\r\n  return {\r\n    type: SET_AMOUNT_TO_PAY\r\n  }\r\n}\r\nexport const addCoin = coin => {\r\n  return{\r\n    type: ADD_COIN,\r\n    payload: coin\r\n  }\r\n}\r\nexport const removeCoin = coinValue => {\r\n  return{\r\n    type: REMOVE_COIN,\r\n    payload: coinValue\r\n  }\r\n}\r\n","import React from 'react'\r\nimport useAddCoinDialog from './Hooks/useAddCoinDialog'\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\n\r\nconst AddCoinDialog= ({ isDialogOpen, handleDialogClose }) => {\r\n    const { \r\n        setValue, \r\n        setCount, \r\n        countInputError,\r\n        valueInputError,\r\n        disableSubmitButton,\r\n        addNewCoin,\r\n        handleAddCoinDialogClose\r\n     } = useAddCoinDialog(handleDialogClose)\r\n     const errorStyle = {\r\n         color: \"red\"\r\n     }\r\n    return (\r\n    <Modal dialogClassName=\"addCoinDialog\" show={isDialogOpen} onHide={handleAddCoinDialogClose}>\r\n        <Modal.Header  closeButton>\r\n          <Modal.Title>Add/Edit Coin</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form>\r\n            <Form.Group>\r\n                <Form.Label>Value<sup>*</sup></Form.Label>\r\n                <Form.Control type=\"number\" step={0.1} min={0.1} onChange={(e) => setValue(+e.target.value)} placeholder=\"Enter Value\" />\r\n                <p style={errorStyle}>{valueInputError}</p>\r\n                <Form.Label>Count<sup>*</sup></Form.Label>\r\n                <Form.Control type=\"number\" min={1} onChange={(e) => setCount(+e.target.value)} placeholder=\"Enter Count\" />\r\n                <p style={errorStyle}>{countInputError}</p>\r\n            </Form.Group>           \r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleAddCoinDialogClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" disabled={disableSubmitButton} onClick={() =>addNewCoin()}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n    )\r\n}\r\n\r\nexport default AddCoinDialog\r\n","import React, { useCallback, useState, useMemo, useEffect } from 'react'\r\nimport useInputField from './useInputField'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    incrementCoin,\r\n    decrementCoin,\r\n    calculateDiff,\r\n    setToPay,\r\n    addCoin,\r\n    removeCoin\r\n  } from \"../../redux/coins/coinActions\"\r\n  \r\n  \r\n   const useCoinsContainer = () => {\r\n\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false)\r\n    const toggleAddCoinDialog = useCallback(() =>{\r\n       setIsDialogOpen(!isDialogOpen)\r\n    },[isDialogOpen])\r\n    const getCoins = state => state.coins\r\n    const coins = useSelector(getCoins)\r\n    \r\n    const getSetterButtonsStatus = state => state.setterButtonsDisabled\r\n    const setterButtonsStatus = useSelector(getSetterButtonsStatus)\r\n    \r\n    const getToPay = state => state.toPay\r\n    const toPay = useSelector(getToPay)\r\n    \r\n    const getOutputString = state => state.outputString\r\n    const outputString = useSelector(getOutputString)\r\n    \r\n    const getPayButtonStatus = state => state.payButtonDisabled\r\n    const payButtonStatus = useSelector(getPayButtonStatus)\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const coinIncrement = useCallback( value => {\r\n         dispatch(incrementCoin(value))\r\n      },[])\r\n\r\n    const coinDecrement = useCallback( value => {\r\n         dispatch(decrementCoin(value))\r\n      },[])\r\n\r\n    const calculate = useCallback( (payedAmount) => {\r\n         dispatch(calculateDiff(payedAmount))\r\n      },[])\r\n\r\n    const setToPayAmount = useCallback( () => {\r\n         dispatch(setToPay())\r\n      },[])\r\n\r\n    const deleteCoin = useCallback( coinValue => {\r\n        dispatch(removeCoin(coinValue))\r\n     },[/* value ?*/])\r\n\r\n     return {\r\n        isDialogOpen,\r\n        toggleAddCoinDialog,\r\n        coins,\r\n        setterButtonsStatus,\r\n        toPay,\r\n        outputString,\r\n        payButtonStatus,\r\n        coinIncrement,\r\n        coinDecrement,\r\n        calculate,\r\n        setToPayAmount,\r\n        deleteCoin\r\n    }\r\n  }\r\n  export default useCoinsContainer\r\n  ","import { useCallback, useMemo } from 'react'\r\nimport { isEmpty } from 'ramda'\r\nimport useInputField from './useInputField'\r\nimport { validPayment } from '../../utils/validation'\r\nimport { calculateDiff } from '../../redux/coins/coinActions'\r\n\r\nconst usePay = (requiredToPay, calculate) => {\r\n    const validatePayedAmount = useCallback(\r\n        (payedAmount) => {\r\n           return validPayment(requiredToPay, payedAmount)\r\n        },\r\n        [requiredToPay],\r\n    )\r\n    const { value: payed, setValue: setPayed, error: payedError, setError: setPayedError} = useInputField('', validatePayedAmount)\r\n    const payButtonDisabled = useMemo(\r\n        () => {\r\n            return isEmpty(payed) || payedError !== false ? true : false   \r\n        }\r\n    )\r\n    const onPayClick = useCallback(\r\n        (value) => {\r\n            setPayed('')\r\n            setPayedError(null)\r\n            calculate(value)\r\n        },\r\n        [calculate, setPayed, setPayedError],\r\n    )\r\n    return {\r\n        payed,\r\n        setPayed,\r\n        payedError,\r\n        onPayClick,\r\n        payButtonDisabled\r\n    }\r\n}\r\nexport default usePay","import React,{ useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport usePay from './Hooks/usePay'\r\n\r\nconst Pay = ({ toPay, disable, calculate }) => {\r\n    const {\r\n      payed,\r\n      setPayed,\r\n      payedError,\r\n      onPayClick,\r\n      payButtonDisabled\r\n    }\r\n    = usePay(toPay, calculate)\r\n\r\n    const inputAmountStyle = { \r\n                              width:\"25%\",\r\n                              margin: \"auto\",\r\n                              background:\"transparent\",\r\n                              color:\"white\"\r\n                            }\r\n    const payButtonStyle = {\r\n                            fontSize:\"30px\",\r\n                            color:\"white\",\r\n                            background:\"transparent\",\r\n                            marginBottom:\"10px\"\r\n                          }\r\n    return (         \r\n      <Form>\r\n        <Form.Group style={{height:\"110px\"}}> \r\n          <Form.Label><h4 style={{color:\"white\"}}>Required to Pay: { toPay }</h4></Form.Label>\r\n          <Form.Control \r\n            style={inputAmountStyle} \r\n            type=\"number\" \r\n            step={0.1} \r\n            value={payed} \r\n            onChange={(e) => setPayed(+e.target.value)}  \r\n            disabled={disable}\r\n            min={0.1}  \r\n            placeholder='Enter amount'\r\n          />\r\n          <p style= {{ color: \"red\" }}>{payedError}</p>\r\n        </Form.Group>  \r\n        <Button \r\n          style={payButtonStyle} \r\n          variant=\"success\" \r\n          disabled={ disable || payButtonDisabled } \r\n          onClick={()=> onPayClick(payed)}\r\n        >\r\n            Pay\r\n        </Button>\r\n      </Form>\r\n    )\r\n }\r\nexport default Pay","export const transparentButton = {\r\n    background: \"transparent\",\r\n    fontSize: \"30px\",\r\n    marginTop:\"20px\",\r\n    marginRight:\"20px\",\r\n    color:\"white\"\r\n  }","import React from \"react\"\r\nimport Coin from \"./Coin\"\r\nimport AddCoinDialog from './AddCoinDialog'\r\nimport useCoinsContainer from './Hooks/useCoinsContainer'\r\nimport Pay from \"./Pay\"\r\nimport { transparentButton } from './constants'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst CoinsContainer = () => {\r\n  const {\r\n    isDialogOpen,\r\n    toggleAddCoinDialog,\r\n    coins,\r\n    setterButtonsStatus,\r\n    toPay,\r\n    outputString,\r\n    payButtonStatus,\r\n    coinIncrement,\r\n    coinDecrement,\r\n    calculate,\r\n    setToPayAmount,\r\n    deleteCoin\r\n  } = useCoinsContainer()\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <div className=\"coinsContainer\" >\r\n            {coins.map((coin) => (\r\n              <Coin\r\n                key={coin.value}\r\n                disable={setterButtonsStatus}\r\n                value={coin.value}\r\n                decrement={coinDecrement}\r\n                increment={coinIncrement}\r\n                remove={deleteCoin}\r\n                count={coin.count}\r\n              />\r\n            ))}\r\n        </div>\r\n        <Button onClick={toggleAddCoinDialog} style={ transparentButton }>Add Coin</Button>\r\n        <AddCoinDialog isDialogOpen={isDialogOpen} handleDialogClose={toggleAddCoinDialog} />\r\n        <Button\r\n          style={transparentButton} \r\n          className=\"btn-warning\"\r\n          disabled={setterButtonsStatus}\r\n          onClick={() => setToPayAmount()}\r\n        >\r\n          Generate Amount\r\n        </Button>\r\n        <Pay\r\n          toPay={toPay}\r\n          disable={payButtonStatus}\r\n          calculate={calculate}\r\n        />\r\n        {outputString && <h5>{outputString}</h5>}\r\n    </React.Fragment>\r\n  );\r\n\r\n}\r\n\r\nexport default CoinsContainer","import React from \"react\";\r\nimport store from \"./redux/store\";\r\nimport \"./App.css\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport CoinsContainer from \"./components/CoinsContainer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <h1 style={{ color: \"orange\" }}>Change Application</h1>\r\n        <CoinsContainer />\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}